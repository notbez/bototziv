// file: bot.js

require('dotenv').config();
const { Telegraf, Markup, session } = require('telegraf');

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
const bot = new Telegraf(process.env.BOT_TOKEN);

// ID –∫–∞–Ω–∞–ª–∞ –¥–ª—è –æ—Ç–∑—ã–≤–æ–≤
const FEEDBACK_CHANNEL_ID = process.env.FEEDBACK_CHANNEL_ID;

bot.use(session({ defaultSession: () => ({}) }));

// –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
const mainMenu = Markup.keyboard([
  ['üìù –û—Ç–∑—ã–≤', 'üí∞ –î–æ–Ω–∞—Ç']
]).resize();

// –ú–µ–Ω—é –¥–æ–Ω–∞—Ç–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏
const donationMenu = Markup.inlineKeyboard([
  [Markup.button.callback('üìã –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å TON', 'copy_ton')],
  [Markup.button.callback('üìã –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å Ethereum', 'copy_eth')],
  [Markup.button.callback('‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é', 'back_to_menu')]
]);

// –£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞
async function safeReply(ctx, text, options = {}) {
  try {
    if (ctx.session.lastBotMessageId) {
      await ctx.telegram.deleteMessage(ctx.chat.id, ctx.session.lastBotMessageId);
    }
  } catch (e) {
    console.error('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è:', e.description);
  }
  const sent = await ctx.reply(text, options);
  ctx.session.lastBotMessageId = sent.message_id;
}

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è (–∫–æ—à–µ–ª–µ–∫) —Å –∞–≤—Ç–æ—É–¥–∞–ª–µ–Ω–∏–µ–º
async function sendTemporaryMessage(ctx, text, delay = 30000) {
  const message = await ctx.reply(text, { parse_mode: 'Markdown' });
  setTimeout(async () => {
    try {
      await ctx.telegram.deleteMessage(ctx.chat.id, message.message_id);
    } catch (e) {
      console.error('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è:', e.description);
    }
  }, delay);
}

// –°—Ç–∞—Ä—Ç –±–æ—Ç–∞
bot.start(async (ctx) => {
  ctx.session.state = null;
  await safeReply(
    ctx,
    'Welcome, –≤—ã –Ω–∞—à–ª–∏ —Ç–æ —Å–∞–º–æ–µ –º–µ—Å—Ç–æ, –≥–¥–µ —Å–º–æ–∂–µ—Ç–µ –≥–ª—è–Ω—É—Ç—å –æ—Ç–∑—ã–≤—ã –∂–∏–≤—ã—Ö –ª—é–¥–µ–π, –∞ —Ç–∞–∫ –∂–µ –æ—Å—Ç–∞–≤–∏—Ç—å —Å–≤–æ–π –ª–∏—á–Ω—ã–π –∏ —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –æ–± –æ–ø—ã—Ç–µ —Ä–∞–±–æ—Ç—ã —Å –Ω–∞—à–µ–π –∫–æ–º–∞–Ω–¥–æ–π.',
    mainMenu
  );
});

// –ö–Ω–æ–ø–∫–∞ "üìù –û—Ç–∑—ã–≤"
bot.hears('üìù –û—Ç–∑—ã–≤', async (ctx) => {
  ctx.session.state = 'waiting_for_feedback';
  await safeReply(
    ctx,
    '–ó–¥–µ—Å—å, –≤—ã –º–æ–∂–µ—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å —Å–≤–æ–π –æ—Ç–∑—ã–≤, —Ä–∞—Å—Å–∫–∞–∑–∞–≤ –≤–æ –≤—Å–µ—Ö –¥–µ—Ç–∞–ª—è—Ö –º–æ–º–µ–Ω—Ç—ã –Ω–∞—à–µ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–∞.\n\n<a href="https://t.me/reviewsmarx">–û—Ç–∑—ã–≤—ã –¥—Ä—É–≥–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤</a>',
    { parse_mode: 'HTML' }
  );
});

// –ö–Ω–æ–ø–∫–∞ "üí∞ –î–æ–Ω–∞—Ç"
bot.hears('üí∞ –î–æ–Ω–∞—Ç', async (ctx) => {
  ctx.session.state = 'donation';
  await safeReply(
    ctx,
    '–ú—ã –Ω–µ –Ω–∞—Å—Ç–∞–∏–≤–∞–µ–º –Ω–∞ –ø–æ–º–æ—â–∏ –Ω–∞—à–µ–π –∫–æ–º–∞–Ω–¥–µ –º–∞—Ç–µ—Ä–∏–∞–ª—å–Ω—ã–º–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞–º–∏, –Ω–æ –±—É–¥–µ–º —Ä–∞–¥—ã –ª—é–±–æ–º—É –¥–æ–Ω–∞—Ç—É —Å –≤–∞—à–µ–π —Å—Ç–æ—Ä–æ–Ω—ã.\n\n' +
    'üí≥ Crypto –†–µ–∫–≤–∏–∑–∏—Ç—ã:\n' +
    '‚Ä¢ –°–µ—Ç—å The Open Network (TON)\nUQAcBFnkIlr4S-TI9ZB2oCOW611T9VMowPYBSGWs2RwXM8ZP\n\n' +
    '‚Ä¢ –°–µ—Ç—å Ethereum (ERC-20)\n0xc466948801be8084b6f0c29b96e7c42c33e7ac11\n\n' +
    '–¢–∞–∫–∂–µ –¥–æ—Å—Ç—É–ø–Ω—ã –≤–∞—Ä–∏–∞–Ω—Ç—ã —Å –æ–Ω–ª–∞–π–Ω –ø–µ—Ä–µ–≤–æ–¥–∞–º–∏ –Ω–∞ –±–∞–Ω–∫–æ–≤—Å–∫—É—é –∫–∞—Ä—Ç—É, –æ–± —ç—Ç–æ–º –≤—ã –º–æ–∂–µ—Ç–µ —É—Ç–æ—á–Ω–∏—Ç—å –≤ <a href="https://t.me/marxstudchat">—á–∞—Ç–µ</a>.',
    {
      parse_mode: 'HTML',
      reply_markup: donationMenu.reply_markup
    }
  );
});

// –ö–Ω–æ–ø–∫–∞ "‚¨ÖÔ∏è –ù–∞–∑–∞–¥"
bot.hears('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', async (ctx) => {
  ctx.session.state = null;
  await safeReply(ctx, '–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.', mainMenu);
});

// –ö–Ω–æ–ø–∫–∞ "‚úÖ –ó–∞–¥–æ–Ω–∞—Ç–∏–ª"
bot.hears('‚úÖ –ó–∞–¥–æ–Ω–∞—Ç–∏–ª', async (ctx) => {
  ctx.session.state = null;
  await safeReply(ctx, '–°–ø–∞—Å–∏–±–æ –±–æ–ª—å—à–æ–µ –∑–∞ –≤–∞—à—É –ø–æ–¥–¥–µ—Ä–∂–∫—É! ‚ù§Ô∏è', mainMenu);
});

// Inline –∫–Ω–æ–ø–∫–∏

// –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å TON
bot.action('copy_ton', async (ctx) => {
  await ctx.answerCbQuery('–ê–¥—Ä–µ—Å TON —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω! üìã');
  await sendTemporaryMessage(ctx, '`UQAcBFnkIlr4S-TI9ZB2oCOW611T9VMowPYBSGWs2RwXM8ZP`\n\n–ù–∞–∂–º–∏—Ç–µ –Ω–∞ —Ç–µ–∫—Å—Ç –∏ —É–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è.');
});

// –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å Ethereum
bot.action('copy_eth', async (ctx) => {
  await ctx.answerCbQuery('–ê–¥—Ä–µ—Å Ethereum —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω! üìã');
  await sendTemporaryMessage(ctx, '`0xc466948801be8084b6f0c29b96e7c42c33e7ac11`\n\n–ù–∞–∂–º–∏—Ç–µ –Ω–∞ —Ç–µ–∫—Å—Ç –∏ —É–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è.');
});

// –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é
bot.action('back_to_menu', async (ctx) => {
  await ctx.answerCbQuery();
  ctx.session.state = null;
  await safeReply(ctx, '–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.', mainMenu);
});

// –ü—Ä–∏—ë–º —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–æ—Ç–∑—ã–≤–æ–≤)
bot.on('text', async (ctx) => {
  if (ctx.session.state === 'waiting_for_feedback') {
    const feedback = ctx.message.text;
    await ctx.telegram.sendMessage(
      FEEDBACK_CHANNEL_ID,
      `–û—Ç–∑—ã–≤ –æ—Ç @${ctx.from.username || ctx.from.id}:\n\n${feedback}`
    );
    await safeReply(ctx, '–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –æ—Ç–∑—ã–≤! üôè', mainMenu);
    ctx.session.state = null;
  }
});

// –ì–ª–æ–±–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
bot.catch((err, ctx) => {
  console.error(`–û—à–∏–±–∫–∞ –≤ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ ${ctx.update.update_id}:`, err);
});

// –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.launch();

process.once('SIGINT', () => bot.stop('SIGINT'));
process.once('SIGTERM', () => bot.stop('SIGTERM'));